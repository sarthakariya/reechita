/* style.css */

:root {
    /* Dark Elegant Theme Colors */
    --bg-gradient-start: #0a0712;
    --bg-gradient-end: #1c0b2e;
    --container-bg: rgba(30, 15, 50, 0.7); /* Adjusted transparency for boxes */
    --text-light: #e0e0e0;
    --text-heading: #FFD700;
    --primary-accent: #FF69B1; /* Slightly adjusted pink */
    --secondary-accent: #8A2BE2;
    --shadow-deep: 0 15px 40px rgba(0, 0, 0, 0.6);
    font-size: 16px; /* Base font size */

    /* Animation speeds - added for easier global adjustments */
    --animation-duration-fast: 0.3s;
    --animation-duration-medium: 1s;
    --animation-duration-slow: 1.5s;
}

/* Global Box Sizing for easier layout management */
*, *::before, *::after {
    box-sizing: border-box;
}

/* Base Styles */
body {
    font-family: 'Lora', serif; /* Elegant serif font */
    color: var(--text-light);
    margin: 0;
    padding: 0;
    overflow-x: hidden;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    background: linear-gradient(135deg, var(--bg-gradient-start), var(--bg-gradient-end));
    animation: backgroundShift 20s ease infinite alternate; /* Subtle background shift */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    /* Transition for theme change */
    transition: background var(--animation-duration-medium) ease-in-out;
}

@keyframes backgroundShift {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
}

/* Accessibility: Hide content visually but keep it for screen readers */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

/* Background Dynamic Elements (All Pages) */
.background-elements {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: -1; /* Ensure background elements stay behind content */
    pointer-events: none; /* Prevent interference with clicks */
}

/* Stars */
.star {
    position: absolute;
    background: #fff;
    border-radius: 50%;
    opacity: 0;
    animation: twinkle 4s infinite ease-in-out alternate, starDrift var(--star-drift-duration) linear infinite alternate;
    box-shadow: 0 0 5px #fff;
}

@keyframes twinkle {
    0%, 100% { opacity: 0; transform: scale(0.5); }
    50% { opacity: 1; transform: scale(1); }
}

@keyframes starDrift {
    0% { transform: translate(0, 0); }
    100% { transform: translate(var(--star-drift-x), var(--star-drift-y)); }
}

/* Ethereal Glows */
.ethereal-glow {
    position: absolute;
    background: radial-gradient(circle, var(--primary-accent), var(--secondary-accent), transparent 70%);
    border-radius: 50%;
    opacity: 0.3;
    filter: blur(50px);
    animation: glowFloat var(--glow-duration) ease-in-out infinite alternate, glowPulse var(--glow-duration) ease-in-out infinite alternate;
}

@keyframes glowFloat {
    0% { transform: translate(calc(var(--x) * 1vw), calc(var(--y) * 1vh)) scale(var(--glow-scale)); }
    100% { transform: translate(calc((var(--x) + var(--dx)) * 1vw), calc((var(--y) + var(--dy)) * 1vh)) scale(calc(var(--glow-scale) * 1.1)); }
}

@keyframes glowPulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.5; }
}

/* Particles */
.particle {
    position: absolute;
    background: #fff;
    border-radius: 50%;
    opacity: 0;
    animation: particleFloat var(--p-duration) ease-in-out infinite alternate;
    box-shadow: 0 0 3px rgba(255, 255, 255, 0.7);
}

@keyframes particleFloat {
    0% { transform: translate(var(--p-x), var(--p-y)) scale(var(--p-scale)); opacity: 0; }
    25% { opacity: 1; }
    75% { opacity: 1; }
    100% { transform: translate(calc(var(--p-x) + var(--p-dx)), calc(var(--p-y) + var(--p-dy))) scale(var(--p-scale)); opacity: 0; }
}

/* Moon */
.moon {
    position: absolute;
    background: radial-gradient(circle at 30% 30%, #fefefe, #ccc, #999);
    border-radius: 50%;
    box-shadow: 0 0 50px rgba(255, 255, 255, 0.7), 0 0 100px rgba(255, 255, 255, 0.4);
    animation: moonDrift 60s linear infinite alternate, moonPulse 5s ease-in-out infinite alternate, moonGlow 10s ease infinite;
    opacity: 0.9;
    z-index: -2; /* Ensure it's behind other background elements */
}

@keyframes moonDrift {
    0% { transform: translate(0, 0); }
    100% { transform: translate(10vw, 5vh); }
}

@keyframes moonPulse {
    0% { transform: scale(1); }
    100% { transform: scale(1.02); }
}

@keyframes moonGlow {
    0% { box-shadow: 0 0 50px rgba(255, 255, 255, 0.7), 0 0 100px rgba(255, 255, 255, 0.4); }
    50% { box-shadow: 0 0 60px rgba(255, 255, 255, 0.8), 0 0 120px rgba(255, 255, 255, 0.5); }
    100% { box-shadow: 0 0 50px rgba(255, 255, 255, 0.7), 0 0 100px rgba(255, 255, 255, 0.4); }
}

/* Distant Scenery (Parallax effect) */
.distant-scenery {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30%; /* Adjust as needed */
    background: url('https://as2.ftcdn.net/v2/jpg/14/30/89/55/1000_F_1430895515_PnXMoB0IX2oocY6MPYL9J8KmbvC9z0FK.webp') repeat-x bottom center;
    background-size: contain;
    animation: sceneryParallax 120s linear infinite alternate;
    opacity: 0.6;
    z-index: -2; /* Ensure it's behind other background elements */
}

@keyframes sceneryParallax {
    0% { background-position: 0% bottom; }
    100% { background-position: 100% bottom; }
}

/* Water Shimmer at the bottom */
.water-shimmer {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 10%; /* Height of the water effect */
    background: radial-gradient(ellipse at 50% 100%, rgba(135, 206, 235, 0.3) 0%, rgba(25, 25, 112, 0.5) 70%, transparent 100%);
    overflow: hidden;
    z-index: -2; /* Ensure it's behind other background elements */
}

.water-shimmer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 200%;
    height: 100%;
    background: linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.1) 10%, transparent 20%, rgba(255, 255, 255, 0.1) 30%, transparent 40%, rgba(255, 255, 255, 0.1) 50%, transparent 60%, rgba(255, 255, 255, 0.1) 70%, transparent 80%);
    background-size: 50% 100%;
    animation: waterFlow 30s linear infinite;
}

.water-shimmer::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse at 50% 0%, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
    animation: waterRipple 20s ease-in-out infinite alternate;
}

@keyframes waterFlow {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
}

@keyframes waterRipple {
    0% { transform: scale(1, 0.8) translateY(0); opacity: 1; }
    50% { transform: scale(1.05, 1.2) translateY(-5%); opacity: 0.7; }
    100% { transform: scale(1, 0.8) translateY(0); opacity: 1; }
}

/* Floating Orbs */
.floating-orb {
    position: absolute;
    background: radial-gradient(circle, var(--orb-color) 0%, transparent 70%);
    border-radius: 50%;
    filter: blur(var(--orb-blur));
    opacity: var(--orb-opacity);
    animation: orbFloat var(--orb-duration) ease-in-out infinite alternate, orbPulse var(--orb-pulse-duration) ease-in-out infinite alternate;
}

@keyframes orbFloat {
    0% { transform: translate(var(--orb-x), var(--orb-y)) scale(var(--orb-scale)); }
    100% { transform: translate(calc(var(--orb-x) + var(--orb-dx)), calc(var(--orb-y) + var(--orb-dy))) scale(calc(var(--orb-scale) * 1.1)); }
}

@keyframes orbPulse {
    0%, 100% { opacity: var(--orb-opacity); }
    50% { opacity: calc(var(--orb-opacity) + 0.2); }
}

/* Nebula Clouds */
.nebula-cloud {
    position: absolute;
    background: radial-gradient(ellipse at center, var(--cloud-color) 0%, transparent 70%);
    border-radius: 50%;
    filter: blur(var(--cloud-blur));
    opacity: var(--cloud-opacity);
    animation: cloudDrift var(--cloud-duration) linear infinite alternate;
}

@keyframes cloudDrift {
    0% { transform: translate(var(--cloud-x), var(--cloud-y)) scale(var(--cloud-scale)); }
    100% { transform: translate(calc(var(--cloud-x) + var(--cloud-dx)), calc(var(--cloud-y) + var(--cloud-dy))) scale(var(--cloud-scale)); }
}

/* Wind Gusts */
.wind-gust {
    position: absolute;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, var(--gust-opacity)), transparent);
    height: var(--gust-height);
    width: var(--gust-width);
    filter: blur(var(--gust-blur));
    animation: gustFlow var(--gust-duration) linear infinite;
    opacity: 0;
}

@keyframes gustFlow {
    0% { transform: translateX(-100vw); opacity: 0; }
    10% { opacity: var(--gust-opacity); }
    90% { opacity: var(--gust-opacity); }
    100% { transform: translateX(100vw); opacity: 0; }
}

/* Flying Wings (simple abstract shapes) */
.flying-wing {
    position: absolute;
    background: var(--wing-color);
    clip-path: polygon(0% 20%, 50% 0%, 100% 20%, 100% 80%, 50% 100%, 0% 80%);
    opacity: var(--wing-opacity);
    animation: wingFly var(--wing-duration) linear infinite;
    transform: scale(var(--wing-scale)) rotate(var(--wing-rotation));
}

@keyframes wingFly {
    0% { transform: translate(var(--wing-x), var(--wing-y)) scale(var(--wing-scale)) rotate(var(--wing-rotation)); opacity: 0; }
    10% { opacity: var(--wing-opacity); }
    90% { opacity: var(--wing-opacity); }
    100% { transform: translate(calc(var(--wing-x) + var(--wing-dx)), calc(var(--wing-y) + var(--wing-dy))) scale(var(--wing-scale)) rotate(var(--wing-rotation)); opacity: 0; }
}

/* Shooting Stars */
.shooting-star {
    position: absolute;
    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0));
    height: 2px;
    width: 150px; /* Length of the tail */
    border-radius: 50%;
    filter: blur(1px);
    opacity: 0;
    animation: shoot var(--shoot-duration) linear infinite;
    z-index: 5; /* Above other background elements */
    transform-origin: 100% 50%; /* Rotate from the head of the star */
}

@keyframes shoot {
    0% {
        transform: translate(var(--start-x), var(--start-y)) rotate(var(--shoot-angle));
        opacity: 0;
    }
    10% { opacity: 1; }
    20% { opacity: 0; } /* Quick flash */
    100% {
        transform: translate(var(--end-x), var(--end-y)) rotate(var(--shoot-angle));
        opacity: 0;
    }
}


/* Main Content Container */
.container {
    background-color: var(--container-bg); /* Adjusted transparency */
    padding: 30px 40px;
    border-radius: 40px 15px 40px 15px; /* Different, slightly irregular shape */
    box-shadow: var(--shadow-deep);
    text-align: center;
    max-width: 800px;
    width: 90%;
    margin: 40px auto;
    position: relative;
    z-index: 1; /* Ensure content is above background elements */
    overflow: hidden; /* For inner animations */
    
    /* === IMPORTANT ADDITIONS FOR PRELOADER FIX === */
    opacity: 0; /* Start hidden */
    transform: translateY(20px) scale(0.95); /* Start slightly off and scaled down for entrance effect */
    transition: opacity 1.2s ease-out, transform 1.2s ease-out; /* Smooth transition */
}

/* === NEW RULE TO REVEAL THE MAIN CONTENT CONTAINER === */
.container.visible-content {
    opacity: 1;
    transform: translateY(0) scale(1);
}


/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
    .container {
        padding: 20px 25px;
        margin: 20px auto;
        width: 95%;
    }
    .moon {
        width: 120px;
        height: 120px;
    }
}

@media (max-width: 480px) {
    :root {
        font-size: 14px;
    }
    .container {
        padding: 15px 20px;
        border-radius: 20px 8px 20px 8px;
    }
    .moon {
        width: 80px;
        height: 80px;
    }
}

/* Text Styles */
h1 {
    font-family: 'Great Vibes', cursive; /* Elegant script font */
    color: var(--text-heading);
    font-size: 3.5em;
    margin-bottom: 25px;
    text-shadow: 0 0 15px rgba(255, 215, 0, 0.8);
    animation: fadeInScale var(--animation-duration-slow) ease-out forwards;
}

h2 {
    font-family: 'Pacifico', cursive; /* Another elegant script font */
    color: var(--primary-accent);
    font-size: 2.2em;
    margin-top: 30px;
    margin-bottom: 20px;
    text-shadow: 0 0 10px rgba(255, 105, 177, 0.6);
    animation: fadeInSlideUp 1.2s ease-out forwards; /* New animation */
}

p {
    font-size: 1.1em;
    line-height: 1.6;
    margin-bottom: 20px; /* Consistent gaps */
    animation: fadeIn var(--animation-duration-medium) ease-out forwards; /* Staggered animation handled by JS */
    opacity: 0; /* Default hidden for staggered animation */
}

/* Specific text highlighting and glowing */
.glowing-text {
    color: #FFB6C1; /* Light pink */
    text-shadow: 0 0 8px #FFB6C1, 0 0 15px #FFB6C1;
    animation: textGlow 2s ease-in-out infinite alternate;
}

@keyframes textGlow {
    0%, 100% { text-shadow: 0 0 8px #FFB6C1, 0 0 15px #FFB6C1; }
    50% { text-shadow: 0 0 12px #FFB6C1, 0 0 25px #FFB6C1; }
}

.highlight {
    color: var(--primary-accent);
    font-weight: bold;
    animation: sparkleText var(--animation-duration-slow) ease-in-out infinite alternate;
}

@keyframes sparkleText {
    0%, 100% { text-shadow: 0 0 5px var(--primary-accent); }
    50% { text-shadow: 0 0 10px var(--primary-accent), 0 0 20px rgba(255, 255, 255, 0.3); }
}

.glowing-purple {
    color: #DA70D6; /* Orchid / Plum */
    text-shadow: 0 0 8px #DA70D6, 0 0 15px #DA70D6;
    animation: purpleTextGlow 2.5s ease-in-out infinite alternate;
}

@keyframes purpleTextGlow {
    0%, 100% { text-shadow: 0 0 8px #DA70D6, 0 0 15px #DA70D6; }
    50% { text-shadow: 0 0 12px #DA70D6, 0 0 25px #DA70D6; }
}


/* Animations for content elements */
@keyframes fadeInScale {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes fadeInSlideUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}


/* Section Break (Visual separator) */
.section-break {
    width: 80%;
    height: 1px;
    background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.3), transparent);
    margin: 40px auto;
    animation: fadeIn var(--animation-duration-slow) ease-out forwards; /* Staggered animation handled by JS */
    opacity: 0; /* Default hidden for staggered animation */
}

/* Button Styles */
.button-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 25px; /* Consistent gaps between buttons */
    margin-top: 40px;
    animation: fadeIn var(--animation-duration-slow) ease-out forwards;
}

.button, .choice-button {
    background-color: var(--primary-accent);
    color: #fff;
    padding: 15px 30px;
    border: none;
    border-radius: 25px 10px 25px 10px; /* Different button shape */
    font-size: 1.2em;
    font-weight: bold;
    cursor: pointer;
    text-decoration: none;
    transition: background-color var(--animation-duration-fast) ease, transform var(--animation-duration-fast) ease, box-shadow var(--animation-duration-fast) ease;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
    position: relative; /* Essential for evasion to work with transform */
    overflow: hidden;
    animation: buttonPopIn var(--animation-duration-medium) ease-out forwards;
}

.button:hover, .choice-button:hover {
    background-color: var(--secondary-accent);
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
}

.button::before, .choice-button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 10px;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    animation: buttonSparkle 0.6s ease-out;
}

@keyframes buttonSparkle {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 0; }
    50% { opacity: 1; transform: translate(-50%, -50%) scale(1.5); }
    100% { opacity: 0; transform: translate(-50%, -50%) scale(3); }
}

@keyframes buttonPopIn {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Music Playback Button (Unique style) */
#music-play-button {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: rgba(0, 0, 0, 0.6);
    color: #FFD700;
    border: 2px solid #FFD700;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    font-size: 1.5em;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    z-index: 1000;
    box-shadow: 0 0 15px rgba(255, 215, 0, 0.7);
    transition: background-color var(--animation-duration-fast) ease, transform var(--animation-duration-fast) ease, box-shadow var(--animation-duration-fast) ease;
}

#music-play-button.playing {
    background-color: rgba(255, 215, 0, 0.2);
}

#music-play-button:hover {
    transform: scale(1.1);
    box-shadow: 0 0 25px rgba(255, 215, 0, 0.9);
}

/* Transition Page Styles (for transition.html) */
.transition-container {
    background-color: var(--container-bg);
    padding: 50px;
    border-radius: 20px;
    box-shadow: var(--shadow-deep);
    text-align: center;
    max-width: 600px;
    width: 90%;
    margin: 100px auto;
    position: relative;
    z-index: 1;
}

#transitionMessage {
    font-family: 'Great Vibes', cursive;
    color: var(--text-heading);
    font-size: 2.8em;
    margin-bottom: 30px;
    text-shadow: 0 0 15px rgba(255, 215, 0, 0.8);
}

.progress-bar-container { /* This style is reused for both preloader and transition */
    width: 80%;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    margin: 20px auto;
    overflow: hidden;
    height: 25px;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3);
}

#progressBar { /* For transition.html */
    height: 100%;
    width: 0%;
    background: linear-gradient(to right, var(--primary-accent), var(--secondary-accent));
    border-radius: 10px;
    transition: width 0.1s linear;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
    font-weight: bold;
    font-size: 0.9em;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    position: relative; /* For inner glow */
    overflow: hidden; /* For inner glow */
}
#progressBar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255,255,255,0.3); /* Shine effect */
    filter: blur(5px);
    opacity: 0;
    animation: progressBarShine 2s infinite ease-in-out;
}
@keyframes progressBarShine {
    0%, 100% { opacity: 0; transform: translateX(-100%); }
    50% { opacity: 1; transform: translateX(100%); }
}

#progressText { /* For transition.html */
    margin-left: 10px;
}

/* Responsive adjustments for progress bar */
@media (max-width: 768px) {
    .progress-bar-container {
        width: 90%;
    }
}

@media (max-width: 480px) {
    .progress-bar-container {
        width: 95%;
        height: 20px;
    }
    #progressBar {
        font-size: 0.8em;
    }
}

/* Preloader Styles (for index.html) */
#preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--bg-gradient-start), var(--bg-gradient-end));
    z-index: 9999; /* Ensure it's on top of everything */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: opacity 0.7s ease-out; /* Smooth fade-out */
}

#preloader.hidden {
    opacity: 0;
    pointer-events: none; /* Make it unclickable when hidden */
}

.preloader-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    animation: preloaderEntrance 1s ease-out;
}

@keyframes preloaderEntrance {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.preloader-message {
    /* Existing styles for font, color, shadow */
    overflow: hidden; /* To prevent words from showing prematurely */
    white-space: nowrap; /* Keep words on one line for better control */
    opacity: 0; /* Hidden by default, JS will make it 1 and animate words */
    font-family: 'Great Vibes', cursive;
    color: var(--text-heading);
    font-size: 2.2em; /* Slightly larger */
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.7), 0 0 20px rgba(255, 215, 0, 0.5); /* Stronger glow */
    margin-bottom: 20px; /* Added spacing */
}

/* New: Animation for each word/span within the preloader message */
.preloader-message .word-animated {
    display: inline-block; /* Essential for transform/opacity on words */
    opacity: 0;
    transform: scale(0.8);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out; /* Animation for each word */
}

/* Progress bar for Index page preloader - Specific overrides if needed */
#preloader .progress-bar-container { /* Target container within preloader specifically */
    margin-top: 0; /* Adjust margin if needed, as preloader-message already has margin-bottom */
    width: 90%; /* MADE WIDER */
    box-shadow: 0 0 15px rgba(255, 105, 177, 0.4), inset 0 0 10px rgba(0, 0, 0, 0.3); /* Enhanced shadow */
    border-radius: 12px; /* Slightly more rounded */
}

#indexProgressBar { /* Specific ID for the index page progress bar */
    height: 100%;
    width: 0%; /* Starts at 0 */
    background: linear-gradient(to right, #FFD1DC, var(--primary-accent)); /* Softer pink gradient */
    border-radius: 12px; /* Match container */
    transition: width 0.08s linear; /* Smooth fill, slightly faster */
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
    font-weight: bold;
    font-size: 0.9em;
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    position: relative; /* For inner glow */
    overflow: hidden; /* For inner glow */
}

#indexProgressBar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255,255,255,0.5); /* Brighter shine effect */
    filter: blur(8px); /* More blur for ethereal look */
    opacity: 0;
    animation: progressBarShine 2.5s infinite ease-in-out;
}


#indexProgressText { /* Specific ID for the index page progress text */
    /* margin-left: 10px; */ /* Removed this to keep text centered */
}


/* Responsive adjustments for preloader */
@media (max-width: 480px) {
    #preloader .progress-bar-container {
        width: 95%;
        height: 20px;
    }
    #indexProgressBar {
        font-size: 0.8em;
    }
    .preloader-message {
        font-size: 1.5em;
    }
}

/* New: Heartbeat Animation */
@keyframes heartBeat {
    0% { transform: scale(1); }
    15% { transform: scale(1.08); }
    30% { transform: scale(1); }
    45% { transform: scale(1.05); }
    60% { transform: scale(1); }
    100% { transform: scale(1); }
}

.beating-heart {
    display: inline-block; /* Essential for transform on inline elements */
    animation: heartBeat 5s infinite alternate; /* 5 seconds per cycle, repeats, alternates direction */
    transform-origin: center; /* Ensures scaling is from the center */
}


/* CSS-drawn Heart Shape */
.css-heart {
    position: relative;
    width: 120px; /* Adjust size as needed */
    height: 100px;
    background-color: var(--primary-accent); /* Pink heart */
    transform: rotate(-45deg);
    margin: 50px auto 30px; /* Centered with top/bottom margin */
    box-shadow: 0 0 30px var(--primary-accent), 0 0 50px rgba(255, 105, 177, 0.5); /* Glowing effect */
    border-radius: 20px; /* Slightly rounded edges for the base square */
}
.css-heart::before,
.css-heart::after {
    content: '';
    position: absolute;
    width: 120px;
    height: 100px;
    background-color: var(--primary-accent);
    border-radius: 50%;
}
.css-heart::before {
    top: -50%;
    left: 0;
}
.css-heart::after {
    left: 50%;
    top: 0;
}

/* Ensure heart beat animation is visible for this element */
.heart-animation-wrapper .beating-heart {
    animation: heartBeat 1.5s infinite ease-in-out; /* Faster beat for loading */
    transform-origin: center center;
}

/* Transition Page Specific Styles (Refinement) */
.transition-container {
    padding: 60px; /* More padding */
    max-width: 700px; /* Slightly wider */
    margin: 100px auto;
    /* Ensure it has its own entrance animation */
    opacity: 0; /* Start hidden for its own animation */
    transform: translateY(20px) scale(0.95);
    transition: opacity 1.2s ease-out, transform 1.2s ease-out;
}
.transition-container.visible-content {
    opacity: 1;
    transform: translateY(0) scale(1);
}

.transition-message-text {
    font-family: 'Great Vibes', cursive;
    color: var(--text-heading);
    font-size: 2.8em; /* Kept existing size */
    margin-top: 30px; /* Space after heart */
    margin-bottom: 30px;
    text-shadow: 0 0 15px rgba(255, 215, 0, 0.8);
    animation: fadeInSlideUp var(--animation-duration-medium) ease-out forwards; /* Add animation */
    opacity: 0; /* Initial state for animation */
}

.transition-progress-bar { /* To specifically style the progress bar on transition.html */
    width: 70%; /* Smaller progress bar */
    height: 15px; /* Thinner */
    margin: 40px auto 0; /* Adjust margin for spacing */
}
#progressBar {
    border-radius: 8px; /* Smoother edges */
}
#progressText {
    font-size: 0.8em; /* Smaller text */
}

/* Responsive adjustments for transition page */
@media (max-width: 768px) {
    .transition-container {
        padding: 40px;
        max-width: 90%;
    }
    .css-heart {
        width: 90px;
        height: 75px;
    }
    .css-heart::before,
    .css-heart::after {
        width: 90px;
        height: 75px;
    }
    .transition-message-text {
        font-size: 2.2em;
    }
}

@media (max-width: 480px) {
    .transition-container {
        padding: 25px;
    }
    .css-heart {
        width: 70px;
        height: 60px;
    }
    .css-heart::before,
    .css-heart::after {
        width: 70px;
        height: 60px;
    }
    .transition-message-text {
        font-size: 1.8em;
    }
    .transition-progress-bar {
        width: 85%;
        height: 12px;
    }
}

/* --- Specific styles for Confession/page3.html --- */

/* Overrides for .container on page3.html */
.container {
    text-align: center;
}

.response-heading {
    font-family: 'Great Vibes', cursive;
    color: var(--text-heading);
    font-size: clamp(2.5rem, 5vw, 4rem);
    margin-bottom: 2rem;
    text-shadow: 3px 3px 7px rgba(0,0,0,0.4);
    line-height: 1.2;
    opacity: 0;
    animation: fadeInScale 1.5s ease-out forwards 0.5s;
}

.response-message {
    font-family: 'Lora', serif;
    font-size: clamp(1.1rem, 2.2vw, 1.4rem);
    color: var(--text-light);
    line-height: 1.6;
    margin-bottom: 2rem;
    opacity: 0;
    animation: fadeIn var(--animation-duration-medium) ease-out forwards;
}

/* Specific button colors for Yes/No */
.button-yes {
    background-color: #4CAF50; /* Green for Yes */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
    transition: background-color var(--animation-duration-fast) ease, transform var(--animation-duration-fast) ease, box-shadow var(--animation-duration-fast) ease;
}

.button-yes:hover {
    background-color: #45a049;
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
}

.button-no {
    background-color: #F44336; /* Red for No */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
    /* Added transition for evasion effect */
    transition: background-color var(--animation-duration-fast) ease, transform 0.2s ease-out, box-shadow var(--animation-duration-fast) ease, opacity 0.5s ease-out;
}

.button-no:hover {
    background-color: #da3329;
    /* Transform for evasion will override this in JS, but keeping for general hover */
    /* transform: translateY(-3px); */
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.6);
}

/* Question text styles */
.question-text {
    font-family: 'Great Vibes', cursive;
    color: var(--text-heading);
    font-size: clamp(2.8rem, 6vw, 5rem); /* Larger for the main question */
    margin-bottom: 40px;
    text-shadow: 0 0 20px rgba(255, 215, 0, 0.9), 0 0 30px rgba(255, 215, 0, 0.6);
    line-height: 1.2;
    animation: fadeInScale 1.8s ease-out forwards;
    opacity: 0;
}
.emoji {
    font-size: 0.8em; /* Slightly smaller than text */
    margin-left: 10px;
}

/* Specific styles for the "No" button animation */
@keyframes shakeNo {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
    20%, 40%, 60%, 80% { transform: translateX(5px); }
}

.button-no.shake {
    animation: shakeNo 0.5s ease-in-out;
}

/* Confirmation message for "Yes" */
#confirmationMessage {
    font-family: 'Pacifico', cursive;
    color: var(--primary-accent);
    font-size: clamp(2.5rem, 5vw, 3.5rem); /* Made larger for impact */
    margin-top: 30px;
    text-shadow: 0 0 15px rgba(255, 105, 177, 0.8), 0 0 25px rgba(255, 215, 0, 0.5); /* Stronger glow */
    opacity: 0;
    animation: fadeInSlideUp var(--animation-duration-medium) ease-out forwards;
    z-index: 5; /* Ensure it's above other elements if necessary */
    position: relative;
}

/* Styles for images */
.content-image {
    max-width: 80%; /* Adjust as needed */
    height: auto;
    border-radius: 15px;
    margin: 25px auto;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    animation: fadeIn var(--animation-duration-slow) ease-out forwards;
    opacity: 0;
}

/* Styles for GIFs */
.content-gif {
    max-width: 90%; /* Adjust as needed */
    height: auto;
    border-radius: 15px;
    margin: 25px auto;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    animation: fadeIn var(--animation-duration-slow) ease-out forwards;
    opacity: 0;
}

/* Centering utility */
.text-center {
    text-align: center;
}

/* --- New styles for "Yes" page beautiful theme --- */
body.success-theme {
    background: linear-gradient(135deg, #FF69B1, #8A2BE2, #FFD700); /* A very celebratory gradient */
    animation: successBackgroundShift 20s ease infinite alternate; /* Keep existing shift */
    transition: background var(--animation-duration-medium) ease-in-out; /* Smooth transition to new background */
}

@keyframes successBackgroundShift {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
}

/* Falling hearts animation for "Yes" page */
.falling-heart {
    position: fixed;
    font-size: 2em; /* Size of heart */
    pointer-events: none; /* Don't block clicks */
    animation: fall var(--duration) ease-in forwards; /* Animation name, duration from JS */
    opacity: 0; /* Starts invisible */
    z-index: 10;
    transform: translateY(-50px) translateX(var(--start-x)) rotate(0deg); /* Initial position */
}

@keyframes fall {
    0% {
        transform: translateY(-50px) translateX(var(--start-x)) rotate(0deg);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    100% {
        transform: translateY(110vh) translateX(var(--end-x)) rotate(var(--rotate-deg));
        opacity: 0;
    }
}
/* --- NEW: Aura Glow Effect (for 'aura baroli') --- */
.aura-glow {
    position: absolute;
    background: radial-gradient(circle, rgba(135, 206, 235, 0.4) 0%, rgba(0, 0, 0, 0) 70%); /* Soft blue-ish glow */
    border-radius: 50%;
    filter: blur(50px); /* Heavy blur for ethereal look */
    pointer-events: none; /* Allows clicks to pass through */
    animation: auraPulse 15s infinite ease-in-out alternate, auraDrift var(--aura-drift-duration, 25s) infinite ease-in-out alternate;
    z-index: 0; /* Ensures it's behind main content */
    opacity: 0.6;
}

@keyframes auraPulse {
    0% { transform: scale(0.8); opacity: 0.6; }
    50% { transform: scale(1.2); opacity: 0.9; }
    100% { transform: scale(0.8); opacity: 0.6; }
}

@keyframes auraDrift {
    0% { transform: translate(0, 0); }
    100% { transform: translate(var(--adx, 10vw), var(--ady, 10vh)); }
}

/* --- NEW: Streaks Effect --- */
.streak {
    position: absolute;
    background: linear-gradient(to right, rgba(255, 255, 255, 0.0) 0%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.0) 100%);
    height: 2px; /* Thin line */
    width: 200px; /* Length of the streak */
    filter: blur(1px); /* Soft blur */
    pointer-events: none;
    animation: streakFlow var(--streak-duration, 8s) infinite linear;
    z-index: 1; /* Above background, below main content */
    opacity: 0; /* Starts invisible */
}

@keyframes streakFlow {
    0% { transform: translateX(-100vw); opacity: 0; }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { transform: translateX(200vw); opacity: 0; }
}

/* --- Heart Enhancements --- */
/* The general beating heart class, might be used in other places */
.beating-heart {
    /* Existing beat animation */
    /* Add a soft glow effect */
    box-shadow: 0 0 15px rgba(255, 105, 180, 0.7), /* Inner glow */
                0 0 30px rgba(255, 105, 180, 0.4); /* Outer glow */
    transition: box-shadow 0.3s ease-in-out; /* Smooth transition for glow changes */
}

/* Ensure pseudo-elements also get some glow (if applicable to a heart type) */
.beating-heart:after, .beating-heart:before {
    box-shadow: 0 0 15px rgba(255, 105, 180, 0.7),
                0 0 30px rgba(255, 105, 180, 0.4);
}

/* --- NEW: Specific styles for the Preloader's Single Straight Heart --- */
.preloader-single-heart {
    position: relative;
    width: 100px; /* Adjust size as needed */
    height: 90px;
    background-color: var(--primary-accent); /* Pink heart color */
    transform: rotate(-45deg); /* To get the heart shape */
    margin-bottom: 30px; /* Spacing below the heart */
    box-shadow: 0 0 25px var(--primary-accent), 0 0 40px rgba(255, 105, 177, 0.6); /* Enhanced glow */
    border-radius: 15px; /* Softer corners */
    animation: heartBeat 1.5s infinite ease-in-out; /* Subtle pulse animation */
    opacity: 0; /* Starts hidden, revealed by JS */
    transition: opacity 0.8s ease-out; /* Smooth fade-in */
}
/* Pseudo-elements to complete the heart shape */
.preloader-single-heart::before,
.preloader-single-heart::after {
    content: '';
    position: absolute;
    width: 100%; /* Match parent width */
    height: 100%; /* Match parent height */
    background-color: inherit; /* Inherit background color */
    border-radius: 50%; /* Create the rounded lobes */
    box-shadow: inherit; /* Inherit glow effect */
}
.preloader-single-heart::before {
    top: -50%;
    left: 0;
}
.preloader-single-heart::after {
    left: 50%;
    top: 0;
}


/* --- New CSS for Transition Preloader (for page2 to page3) --- */
.transition-preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.98); /* Near black overlay */
    display: flex;
    flex-direction: column; /* To stack heart and message */
    justify-content: center;
    align-items: center;
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.4s ease, visibility 0.4s ease; /* Faster transition */
}

.transition-preloader.active {
    opacity: 1;
    visibility: visible;
}

.transition-preloader-message {
    font-family: 'Great Vibes', cursive;
    color: var(--text-heading);
    font-size: 2em;
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.7);
    margin-top: 20px;
    opacity: 0;
    animation: fadeIn 1s ease-out forwards;
}

/* Old heart spinner (now unused for main preloader, but kept in case transition preloader uses it) */
/* If you want a *different* spinner for the transition, this is where you'd define it */
/* For now, assuming .preloader-single-heart is good enough for all single-heart needs */
/* Or you can remove this heart-spinner block entirely if you're sure it's not needed anywhere */
.heart-spinner { /* This might be used by the dynamic transition preloader */
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
    transform: rotate(45deg);
    animation: heartBeat 1.2s infinite ease-in-out;
    background: radial-gradient(circle at 70% 30%, #FFD1DC, #FF69B1, #FF1493);
    box-shadow: 0 0 20px #FFD1DC, 0 0 40px rgba(255, 105, 180, 0.7);
}
.heart-spinner div {
    top: 32px;
    left: 32px;
    position: absolute;
    background: radial-gradient(circle at 70% 30%, #FFD1DC, #FF69B1, #FF1493);
    box-shadow: 0 0 20px #FFD1DC, 0 0 40px rgba(255, 105, 180, 0.7);
}
.heart-spinner div:after,
.heart-spinner div:before {
    content: " ";
    position: absolute;
    display: block;
    width: 32px;
    height: 32px;
    background: radial-gradient(circle at 70% 30%, #FFD1DC, #FF69B1, #FF1493);
    box-shadow: 0 0 20px #FFD1DC, 0 0 40px rgba(255, 105, 180, 0.7);
}
.heart-spinner div:before {
    left: -24px;
    border-radius: 50% 0 0 50%;
}
.heart-spinner div:after {
    top: -24px;
    border-radius: 50% 50% 0 0;
}


/* --- New CSS for Falling Chocolates --- */
.falling-chocolate {
    position: absolute;
    font-size: 2em; /* Adjust size of chocolate emojis */
    opacity: 0;
    animation: fallAndFade 8s linear forwards;
    pointer-events: none; /* Make sure they don't interfere with clicks */
    text-shadow: 0 0 5px rgba(0,0,0,0.5); /* Small shadow for depth */
    z-index: 999; /* Above other background elements but below UI */
}

@keyframes fallAndFade {
    0% {
        transform: translate(var(--start-x), var(--start-y)) rotate(0deg) scale(0.8);
        opacity: 0;
    }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% {
        transform: translate(var(--end-x), 105vh) rotate(var(--rotate-deg)) scale(1.2);
        opacity: 0;
}
